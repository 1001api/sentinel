// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	geoip2 "github.com/oschwald/geoip2-golang"
	mock "github.com/stretchr/testify/mock"

	net "net"
)

// IPDBRepo is an autogenerated mock type for the IPDBRepo type
type IPDBRepo struct {
	mock.Mock
}

// GetIP provides a mock function with given fields: ip
func (_m *IPDBRepo) GetIP(ip net.IP) (*geoip2.City, error) {
	ret := _m.Called(ip)

	if len(ret) == 0 {
		panic("no return value specified for GetIP")
	}

	var r0 *geoip2.City
	var r1 error
	if rf, ok := ret.Get(0).(func(net.IP) (*geoip2.City, error)); ok {
		return rf(ip)
	}
	if rf, ok := ret.Get(0).(func(net.IP) *geoip2.City); ok {
		r0 = rf(ip)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*geoip2.City)
		}
	}

	if rf, ok := ret.Get(1).(func(net.IP) error); ok {
		r1 = rf(ip)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIPDBRepo creates a new instance of IPDBRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIPDBRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *IPDBRepo {
	mock := &IPDBRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
