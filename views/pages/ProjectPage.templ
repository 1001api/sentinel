package pages

import (
	"fmt"
	gen "github.com/hubkudev/sentinel/gen"
	"github.com/hubkudev/sentinel/views/components"
	"github.com/hubkudev/sentinel/views/components/popups"
	"github.com/mergestat/timediff"
	"time"
)

templ ProjectsPage(user *gen.FindUserByIDRow, projects []gen.FindAllProjectsRow) {
	@components.Layout("Projects | Sentinel") {
		<body>
			@components.Drawer(user, components.DRAWER_PROJECTS) {
				<div class="mx-auto max-w-screen-xl px-4 lg:px-12">
					<div class="px-4 mt-12">
						<h1 class="font-bold text-lg">Projects</h1>
						<p class="text-sm text-gray-700">Manage your project and include the project ID when sending data to ensure it's correctly associated with the specific project.</p>
					</div>
					<div class="mt-6 bg-white dark:bg-gray-800 relative shadow-md sm:rounded-lg overflow-hidden">
						<!-- PROJECTS COUNT -->
						<div class="flex flex-col md:flex-row items-center justify-between space-y-3 md:space-y-0 md:space-x-4 p-4">
							<div class="w-full md:w-1/2 px-6">
								<h5 class="mb-1 tracking-tight text-muted-foreground dark:text-white">You've created { fmt.Sprintf("%d", len(projects)) } projects</h5>
							</div>
							<!-- PROJECTS CREATE BTN -->
							<div class="w-full md:w-auto flex flex-col md:flex-row space-y-2 md:space-y-0 items-stretch md:items-center justify-end md:space-x-3 flex-shrink-0">
								<!-- PROJECTS CREATE BTN ENABLED -->
								<button type="button" id="create-project-btn" data-modal-target="create-project-modal" data-modal-toggle="create-project-modal" class="flex items-center justify-center text-white bg-primary-600 hover:bg-secondary-700 focus:ring-4 focus:ring-primary-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-primary-600 dark:hover:bg-primary-700 focus:outline-none dark:focus:ring-primary-800">
									<svg class="h-3.5 w-3.5 mr-2" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg" aria-hidden="true">
										<path clip-rule="evenodd" fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z"></path>
									</svg>
									Add Project
								</button>
							</div>
						</div>
						<div class="overflow-x-auto">
							if len(projects) > 0 {
								<!-- PROJECTS TABLE -->
								<table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
									<thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
										<tr>
											<th scope="col" class="px-4 py-4">ID</th>
											<th scope="col" class="px-4 py-4">Project Name</th>
											<th scope="col" class="px-4 py-3">Description</th>
											<th scope="col" class="px-4 py-3">Last Data Retrieved</th>
											<th scope="col" class="px-4 py-3">Total Collected Data</th>
											<th scope="col" class="px-4 py-3">Created At</th>
											<th scope="col" class="px-4 py-3">
												<span class="sr-only">Actions</span>
											</th>
										</tr>
									</thead>
									<tbody>
										<!-- PROJECTS ITER -->
										for i, v := range projects {
											<tr class="border-b dark:border-gray-700">
												<td
													class="px-4 py-3 flex items-center"
													x-data="{
														copied: false,
														copy() {
															navigator.clipboard.writeText($refs.projectId.value).then(() => {
																this.copied = true                    
															}).catch((err) => {                        
																this.copied = false                    
															}) }}"
												>
													<p class="truncate text-ellipsis max-w-[100px]">
														{ v.ID.String() }
													</p>
													<div class="flex items-center justify-center">
														<input x-ref="projectId" type="hidden" value={ v.ID.String() } class="w-full" disabled/>
														<button class="rounded-full mx-1 w-fit text-neutral-600/75 hover:bg-neutral-950/10 hover:text-neutral-600 focus:outline-none focus-visible:text-neutral-600 focus-visible:outline focus-visible:outline-offset-0 focus-visible:outline-black active:bg-neutral-950/5 active:-outline-offset-2 dark:text-neutral-300/75 dark:hover:bg-white/10 dark:hover:text-neutral-300 dark:focus-visible:text-neutral-300 dark:focus-visible:outline-white dark:active:bg-white/5" title="Copy" aria-label="Copy" x-on:click="copy()" x-on:click.away="copied = false">
															<span class="sr-only" x-text="copied ? 'copied' : 'copy the response to clipboard'"></span>
															<svg x-show="!copied" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-4">
																<path fill-rule="evenodd" d="M10.5 3A1.501 1.501 0 0 0 9 4.5h6A1.5 1.5 0 0 0 13.5 3h-3Zm-2.693.178A3 3 0 0 1 10.5 1.5h3a3 3 0 0 1 2.694 1.678c.497.042.992.092 1.486.15 1.497.173 2.57 1.46 2.57 2.929V19.5a3 3 0 0 1-3 3H6.75a3 3 0 0 1-3-3V6.257c0-1.47 1.073-2.756 2.57-2.93.493-.057.989-.107 1.487-.15Z" clip-rule="evenodd"></path>
															</svg>
															<svg x-show="copied" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="currentColor" class="size-4 fill-green-500">
																<path fill-rule="evenodd" d="M11.986 3H12a2 2 0 0 1 2 2v6a2 2 0 0 1-1.5 1.937V7A2.5 2.5 0 0 0 10 4.5H4.063A2 2 0 0 1 6 3h.014A2.25 2.25 0 0 1 8.25 1h1.5a2.25 2.25 0 0 1 2.236 2ZM10.5 4v-.75a.75.75 0 0 0-.75-.75h-1.5a.75.75 0 0 0-.75.75V4h3Z" clip-rule="evenodd"></path>
																<path fill-rule="evenodd" d="M2 7a1 1 0 0 1 1-1h7a1 1 0 0 1 1 1v7a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7Zm6.585 1.08a.75.75 0 0 1 .336 1.005l-1.75 3.5a.75.75 0 0 1-1.16.234l-1.75-1.5a.75.75 0 0 1 .977-1.139l1.02.875 1.321-2.64a.75.75 0 0 1 1.006-.336Z" clip-rule="evenodd"></path>
															</svg>
														</button>
													</div>
												</td>
												<th scope="row" class="px-4 py-3 font-medium text-gray-900 whitespace-nowrap dark:text-white">{ v.Name }</th>
												<td class="px-4 py-3">{ v.Description.String }</td>
												<td
													hx-get={ fmt.Sprintf("api/project/last-data-retrieved/%s", v.ID.String()) }
													class="px-4 py-3"
													hx-trigger="revealed, every 30s [document.visibilityState === 'visible'], visibilitychange[document.visibilityState === 'visible'] from:document"
												></td>
												<td
													hx-get={ fmt.Sprintf("api/project/size/%s", v.ID.String()) }
													class="px-4 py-3"
													hx-trigger="revealed, every 30s [document.visibilityState === 'visible'], visibilitychange[document.visibilityState === 'visible'] from:document"
												></td>
												<td class="px-4 py-3">
													{ v.CreatedAt.Time.Format("02 Jan 2006") }
												</td>
												<td class="px-4 py-3 flex items-center justify-end">
													<!-- DROPDOWN TOGGLE -->
													<button data-dropdown-toggle={ templ.EscapeString(fmt.Sprintf("dropdown-%d", i)) } class="inline-flex items-center text-sm font-medium hover:bg-gray-100 dark:hover:bg-gray-700 p-1.5 dark:hover-bg-gray-800 text-center text-gray-500 hover:text-gray-800 rounded-lg focus:outline-none dark:text-gray-400 dark:hover:text-gray-100" type="button">
														<svg class="w-5 h-5" aria-hidden="true" fill="currentColor" viewbox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
															<path d="M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z"></path>
														</svg>
													</button>
													<div id={ templ.EscapeString(fmt.Sprintf("dropdown-%d", i)) } class="hidden z-10 w-44 bg-white rounded divide-y divide-gray-100 shadow-xl border border-gray-400 dark:bg-gray-700 dark:divide-gray-600">
														<ul class="py-1 text-sm" aria-labelledby={ templ.EscapeString(fmt.Sprintf("dropdown-%d", i)) }>
															<li>
																<!-- EDIT MODAL TOGGLE -->
																<button type="button" data-modal-target={ templ.EscapeString(fmt.Sprintf("edit-modal-%d", i)) } data-modal-toggle={ templ.EscapeString(fmt.Sprintf("edit-modal-%d", i)) } class="flex w-full items-center py-2 px-4 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white text-gray-700 dark:text-gray-200">
																	<svg class="w-4 h-4 mr-2" xmlns="http://www.w3.org/2000/svg" viewbox="0 0 20 20" fill="currentColor" aria-hidden="true">
																		<path d="M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z"></path>
																		<path fill-rule="evenodd" clip-rule="evenodd" d="M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z"></path>
																	</svg>
																	Edit
																</button>
															</li>
															<li>
																<!-- DOWNLOAD MODAL TOGGLE -->
																<button type="button" data-modal-target={ templ.EscapeString(fmt.Sprintf("download-modal-%d", i)) } data-modal-toggle={ templ.EscapeString(fmt.Sprintf("download-modal-%d", i)) } class="flex w-full items-center py-2 px-4 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white text-gray-700 dark:text-gray-200">
																	<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-4 me-2">
																		<path fill-rule="evenodd" d="M12 2.25a.75.75 0 0 1 .75.75v11.69l3.22-3.22a.75.75 0 1 1 1.06 1.06l-4.5 4.5a.75.75 0 0 1-1.06 0l-4.5-4.5a.75.75 0 1 1 1.06-1.06l3.22 3.22V3a.75.75 0 0 1 .75-.75Zm-9 13.5a.75.75 0 0 1 .75.75v2.25a1.5 1.5 0 0 0 1.5 1.5h13.5a1.5 1.5 0 0 0 1.5-1.5V16.5a.75.75 0 0 1 1.5 0v2.25a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3V16.5a.75.75 0 0 1 .75-.75Z" clip-rule="evenodd"></path>
																	</svg>
																	Download Data
																</button>
															</li>
															<li>
																<!-- DELETE MODAL TOGGLE -->
																<button type="button" data-modal-target={ templ.EscapeString(fmt.Sprintf("delete-modal-%d", i)) } data-modal-toggle={ templ.EscapeString(fmt.Sprintf("delete-modal-%d", i)) } class="flex gap-2 w-full items-center py-2 px-4 hover:bg-gray-100 dark:hover:bg-gray-600 text-red-500 dark:hover:text-red-400">
																	<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-4">
																		<path fill-rule="evenodd" d="M16.5 4.478v.227a48.816 48.816 0 0 1 3.878.512.75.75 0 1 1-.256 1.478l-.209-.035-1.005 13.07a3 3 0 0 1-2.991 2.77H8.084a3 3 0 0 1-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 0 1-.256-1.478A48.567 48.567 0 0 1 7.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 0 1 3.369 0c1.603.051 2.815 1.387 2.815 2.951Zm-6.136-1.452a51.196 51.196 0 0 1 3.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 0 0-6 0v-.113c0-.794.609-1.428 1.364-1.452Zm-.355 5.945a.75.75 0 1 0-1.5.058l.347 9a.75.75 0 1 0 1.499-.058l-.346-9Zm5.48.058a.75.75 0 1 0-1.498-.058l-.347 9a.75.75 0 0 0 1.5.058l.345-9Z" clip-rule="evenodd"></path>
																	</svg>
																	Delete
																</button>
															</li>
														</ul>
													</div>
												</td>
											</tr>
											<!-- EDIT MODAL -->
											@popups.EditProjectPopup(i, &v)
											<!-- DOWNLOAD MODAL -->
											@popups.DownloadProjectPopup(i, &v)
											<!-- DELETE MODAL -->
											@popups.DeleteProjectPopup(i, &v)
										}
									</tbody>
								</table>
							} else {
								<div class="w-full px-2 flex items-center justify-center pt-10 pb-16">
									<p>You don't have any project yet, create a new one to start sending data</p>
								</div>
							}
						</div>
					</div>
				</div>
				<!-- CREATE POPUP -->
				@popups.CreateProjectPopup()
			}
		</body>
	}
}

templ ProjectSizeText(size int64) {
	{ fmt.Sprintf("%d", size) }KB/<strong class="text-xs">100MB</strong>
}

templ ProjectLastDataText(lastTime *time.Time) {
	<div class="flex items-center gap-2">
		<span class="animate-pulse inline-flex items-center justify-center w-3 h-3 text-xs font-semibold bg-secondary rounded-full"></span>
		{ timediff.TimeDiff(*lastTime) }
	</div>
}
