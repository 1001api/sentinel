package pages

import (
	"fmt"
	"github.com/hubkudev/sentinel/entities"
	gen "github.com/hubkudev/sentinel/gen"
	"github.com/hubkudev/sentinel/views/components"
	"time"
)

type EventDetailPageProps struct {
	User             *gen.FindUserByIDRow
	Project          *gen.FindProjectByIDRow
	Summary          *entities.EventDetail
	WeeklyEventChart *entities.EventSummaryChart
	EventTypeChart   []gen.GetPercentageEventsTypeRow
}

templ EventDetailPage(props EventDetailPageProps) {
	<head>
		<script src="/static/apex-chart.min.js"></script>
		<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
		@templ.JSONScript("weekly-events", props.WeeklyEventChart.Time)
		@templ.JSONScript("event-type-chart", props.EventTypeChart)
		@templ.JSONScript("project-id", props.Project.ID)
	</head>
	@components.Layout("Event Detail | Sentinel") {
		<body>
			@components.Drawer(props.User, components.DRAWER_EVENTS) {
				<!-- BREADCRUMB -->
				<div class="px-4 py-6">
					<nav class="flex" aria-label="Breadcrumb">
						<ol class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse">
							<li class="inline-flex items-center">
								<a href="/events" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white">
									<svg
										xmlns="http://www.w3.org/2000/svg"
										viewBox="0 0 24 24"
										fill="currentColor"
										class="h-4 w-4 me-1"
									>
										<path fill-rule="evenodd" d="M14.615 1.595a.75.75 0 0 1 .359.852L12.982 9.75h7.268a.75.75 0 0 1 .548 1.262l-10.5 11.25a.75.75 0 0 1-1.272-.71l1.992-7.302H3.75a.75.75 0 0 1-.548-1.262l10.5-11.25a.75.75 0 0 1 .913-.143Z" clip-rule="evenodd"></path>
									</svg>
									Events
								</a>
								<svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
									<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"></path>
								</svg>
							</li>
							<li class="inline-flex items-center">
								<div class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white">
									{ props.Project.Name }
								</div>
								<svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
									<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"></path>
								</svg>
							</li>
						</ol>
					</nav>
				</div>
				<!-- SUMMARY -->
				<div hx-get={ fmt.Sprintf("/api/event/summary/detail/%s", props.Project.ID) } hx-trigger="revealed, every 10s [document.visibilityState === 'visible'], visibilitychange[document.visibilityState === 'visible'] from:document" hx-swap="innerHTML">
					@EventDetailSummarySection(props.Summary)
				</div>
				<!-- CHARTS -->
				<div class="grid grid-cols-1 sm:grid-cols-1 lg:grid-cols-3 gap-4 mb-4">
					<div class="block max-w-sm pt-6 px-4 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
						<div class="max-w-sm w-full bg-white rounded-lg dark:bg-gray-800 p-4 md:p-6">
							<div class="flex justify-between">
								<div>
									<h5 id="weekly-event-total" class="leading-none text-3xl font-bold text-gray-900 dark:text-white pb-2">
										{ fmt.Sprintf("%d", props.WeeklyEventChart.Total ) }
									</h5>
									<p class="text-base font-normal text-gray-500 dark:text-gray-400">Events this week</p>
								</div>
							</div>
							<div id="area-chart" class="p-0 pt-6 h-[300px] max-h-[300px]"></div>
						</div>
					</div>
					<div class="block max-w-sm pt-6 pb-4 px-4 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
						<div class="max-w-sm w-full bg-white rounded-lg dark:bg-gray-800 p-4 md:p-6">
							<div class="flex justify-between items-start w-full">
								<div>
									<h5 class="leading-none text-xl font-bold text-gray-900 dark:text-white pb-2">Event Types Percentage</h5>
									<p class="text-base text-sm font-normal text-gray-500 dark:text-gray-400">Percentage of total event types.</p>
								</div>
							</div>
							<!-- Line Chart -->
							<div class="p-0 pt-6 h-[400px] max-h-[400px]" id="pie-chart"></div>
						</div>
					</div>
					<div class="block max-w-sm pt-6 pb-4 px-4 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
						<div class="max-w-sm w-full bg-white rounded-lg dark:bg-gray-800 p-4 md:p-6">
							<div class="flex justify-between items-start w-full">
								<div>
									<h5 class="leading-none text-3xl font-bold text-gray-900 dark:text-white pb-2">240</h5>
									<p class="text-base font-normal text-gray-500 dark:text-gray-400">Event Labels</p>
								</div>
							</div>
							<div class="p-0 pt-6 h-[300px] max-h-[300px]" id="column-chart"></div>
						</div>
					</div>
				</div>
				<section class="flex flex-col gap-4 px-4 mt-12">
					<div>
						<div class="flex items-center gap-1">
							<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-5 animate-spin-slow">
								<path d="M17.004 10.407c.138.435-.216.842-.672.842h-3.465a.75.75 0 0 1-.65-.375l-1.732-3c-.229-.396-.053-.907.393-1.004a5.252 5.252 0 0 1 6.126 3.537ZM8.12 8.464c.307-.338.838-.235 1.066.16l1.732 3a.75.75 0 0 1 0 .75l-1.732 3c-.229.397-.76.5-1.067.161A5.23 5.23 0 0 1 6.75 12a5.23 5.23 0 0 1 1.37-3.536ZM10.878 17.13c-.447-.098-.623-.608-.394-1.004l1.733-3.002a.75.75 0 0 1 .65-.375h3.465c.457 0 .81.407.672.842a5.252 5.252 0 0 1-6.126 3.539Z"></path>
								<path fill-rule="evenodd" d="M21 12.75a.75.75 0 1 0 0-1.5h-.783a8.22 8.22 0 0 0-.237-1.357l.734-.267a.75.75 0 1 0-.513-1.41l-.735.268a8.24 8.24 0 0 0-.689-1.192l.6-.503a.75.75 0 1 0-.964-1.149l-.6.504a8.3 8.3 0 0 0-1.054-.885l.391-.678a.75.75 0 1 0-1.299-.75l-.39.676a8.188 8.188 0 0 0-1.295-.47l.136-.77a.75.75 0 0 0-1.477-.26l-.136.77a8.36 8.36 0 0 0-1.377 0l-.136-.77a.75.75 0 1 0-1.477.26l.136.77c-.448.121-.88.28-1.294.47l-.39-.676a.75.75 0 0 0-1.3.75l.392.678a8.29 8.29 0 0 0-1.054.885l-.6-.504a.75.75 0 1 0-.965 1.149l.6.503a8.243 8.243 0 0 0-.689 1.192L3.8 8.216a.75.75 0 1 0-.513 1.41l.735.267a8.222 8.222 0 0 0-.238 1.356h-.783a.75.75 0 0 0 0 1.5h.783c.042.464.122.917.238 1.356l-.735.268a.75.75 0 0 0 .513 1.41l.735-.268c.197.417.428.816.69 1.191l-.6.504a.75.75 0 0 0 .963 1.15l.601-.505c.326.323.679.62 1.054.885l-.392.68a.75.75 0 0 0 1.3.75l.39-.679c.414.192.847.35 1.294.471l-.136.77a.75.75 0 0 0 1.477.261l.137-.772a8.332 8.332 0 0 0 1.376 0l.136.772a.75.75 0 1 0 1.477-.26l-.136-.771a8.19 8.19 0 0 0 1.294-.47l.391.677a.75.75 0 0 0 1.3-.75l-.393-.679a8.29 8.29 0 0 0 1.054-.885l.601.504a.75.75 0 0 0 .964-1.15l-.6-.503c.261-.375.492-.774.69-1.191l.735.267a.75.75 0 1 0 .512-1.41l-.734-.267c.115-.439.195-.892.237-1.356h.784Zm-2.657-3.06a6.744 6.744 0 0 0-1.19-2.053 6.784 6.784 0 0 0-1.82-1.51A6.705 6.705 0 0 0 12 5.25a6.8 6.8 0 0 0-1.225.11 6.7 6.7 0 0 0-2.15.793 6.784 6.784 0 0 0-2.952 3.489.76.76 0 0 1-.036.098A6.74 6.74 0 0 0 5.251 12a6.74 6.74 0 0 0 3.366 5.842l.009.005a6.704 6.704 0 0 0 2.18.798l.022.003a6.792 6.792 0 0 0 2.368-.004 6.704 6.704 0 0 0 2.205-.811 6.785 6.785 0 0 0 1.762-1.484l.009-.01.009-.01a6.743 6.743 0 0 0 1.18-2.066c.253-.707.39-1.469.39-2.263a6.74 6.74 0 0 0-.408-2.309Z" clip-rule="evenodd"></path>
							</svg>
							<h5 class="text-lg font-semibold">Live Events (Last 1 hour)</h5>
						</div>
						<p class="text-sm text-gray-700">Track real-time events as they occur across all your projects. View incoming events from the past hour, fired from different parts of your system.</p>
					</div>
					<div class="relative overflow-x-auto shadow-md sm:rounded-lg">
						<table hx-get={ fmt.Sprintf("/api/event/live/%s", props.Project.ID) } hx-trigger="revealed, every 10s [document.visibilityState === 'visible'], visibilitychange[document.visibilityState === 'visible'] from:document" hx-target="#live-events" hx-swap="innerHTML" class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
							<thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
								<tr>
									<th scope="col" class="py-3"></th>
									<th scope="col" class="px-6 py-3">
										Event Type
									</th>
									<th scope="col" class="px-6 py-3">
										Event Label
									</th>
									<th scope="col" class="px-6 py-3">
										Fired From
									</th>
									<th scope="col" class="px-6 py-3">
										Element Path
									</th>
									<th scope="col" class="px-6 py-3">
										Element Type
									</th>
									<th scope="col" class="px-6 py-3">
										IP Address
									</th>
									<th scope="col" class="px-6 py-3">
										User Agent
									</th>
									<th scope="col" class="px-6 py-3">
										Browser
									</th>
									<th scope="col" class="px-6 py-3">
										Country
									</th>
									<th scope="col" class="px-6 py-3">
										Region
									</th>
									<th scope="col" class="px-6 py-3">
										City
									</th>
									<th scope="col" class="px-6 py-3">
										Device Type
									</th>
									<th scope="col" class="px-6 py-3">
										Time on Page
									</th>
									<th scope="col" class="px-6 py-3">
										Screen Resolution
									</th>
									<th scope="col" class="px-6 py-3">
										Time Taken
									</th>
									<th scope="col" class="px-6 py-3">
										Received At
									</th>
								</tr>
							</thead>
							<tbody id="live-events"></tbody>
						</table>
					</div>
				</section>
			}
			<script src="/static/assets/event-detail.js"></script>
		</body>
	}
}

templ EventDetailTableRow(events []gen.GetLiveEventsDetailRow) {
	for _, v := range events {
		<tr class={ "bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600", templ.KV("animate-zoom-in", time.Now().Sub(v.ReceivedAt) < 5*time.Second) }>
			<td class="ps-6 py-4">
				if time.Now().Sub(v.ReceivedAt) < 10*time.Second {
					<div class="h-2.5 w-2.5 rounded-full bg-green-600 animate-ping"></div>
				} else if time.Now().Sub(v.ReceivedAt) < 20*time.Second {
					<div class="h-2.5 w-2.5 rounded-full bg-green-300"></div>
				}
			</td>
			<td class="px-6 py-4">
				{ v.EventType }
			</td>
			<td class="px-6 py-4">
				{ v.EventLabel.String }
			</td>
			<td class="px-6 py-4">
				<a href={ templ.SafeURL(v.PageUrl.String) } target="_blank" class="underline">
					{ v.PageUrl.String }
				</a>
			</td>
			<td class="px-6 py-4">
				{ v.ElementPath.String }
			</td>
			<td class="px-6 py-4">
				{ v.ElementType.String }
			</td>
			<td class="px-6 py-4">
				if v.IpAddr != nil {
					{ v.IpAddr.String() }
				}
			</td>
			<td class="px-6 py-4">
				{ v.UserAgent.String }
			</td>
			<td class="px-6 py-4">
				{ v.BrowserName.String }
			</td>
			<td class="px-6 py-4">
				{ v.Country.String }
			</td>
			<td class="px-6 py-4">
				{ v.Region.String }
			</td>
			<td class="px-6 py-4">
				{ v.City.String }
			</td>
			<td class="px-6 py-4">
				{ v.DeviceType.String }
			</td>
			<td class="px-6 py-4">
				{ fmt.Sprintf("%d", v.TimeOnPage.Int32) }
			</td>
			<td class="px-6 py-4">
				{ v.ScreenResolution.String }
			</td>
			<td class="px-6 py-4">
				<div class="flex items-center">
					{ fmt.Sprintf("%d ms", v.ReceivedAt.UnixMilli() - v.FiredAt.UnixMilli()) }
				</div>
			</td>
			<td class="px-6 py-4">
				<div class="flex items-center">
					{ v.ReceivedAt.Format("02/01/2006 15:04:05") }
				</div>
			</td>
		</tr>
	}
}

templ EventDetailSummarySection(summary *entities.EventDetail) {
	<section class="grid grid-cols-1 sm:grid-cols-1 lg:grid-cols-5 gap-4 mb-4">
		<div class="border-l-4 border-l-purple-600 border border-gray-200 block max-w-sm pt-6 pb-4 px-4 bg-white rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
			<h5 class="font-normal text-sm text-gray-700 dark:text-gray-400">Total Events</h5>
			<p class="mb-2 text-xl font-bold tracking-tight text-gray-900 dark:text-white">
				{ fmt.Sprintf("%d", summary.TotalEvents) }
			</p>
		</div>
		<div class="block max-w-sm pt-6 pb-4 px-4 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
			<h5 class="font-normal text-sm text-gray-700 dark:text-gray-400">Total Event Types</h5>
			<p class="mb-2 text-xl font-bold tracking-tight text-gray-900 dark:text-white">
				{ fmt.Sprintf("%d", summary.TotalEventType) }
			</p>
		</div>
		<div class="border-l-4 border-l-purple-600 border border-gray-200 block max-w-sm pt-6 pb-4 px-4 bg-white rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
			<h5 class="font-normal text-sm text-gray-700 dark:text-gray-400">Total Unique Users</h5>
			<p class="mb-2 text-xl font-bold tracking-tight text-gray-900 dark:text-white">
				{ fmt.Sprintf("%d", summary.TotalUniqueUsers) }
			</p>
		</div>
		<div class="block max-w-sm pt-6 pb-4 px-4 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
			<h5 class="font-normal text-sm text-gray-700 dark:text-gray-400">Total Locations</h5>
			<p class="mb-2 text-xl font-bold tracking-tight text-gray-900 dark:text-white">
				{ fmt.Sprintf("%d", summary.TotalCountryVisited) }
			</p>
		</div>
		<div class="block max-w-sm pt-6 pb-4 px-4 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
			<h5 class="font-normal text-sm text-gray-700 dark:text-gray-400">Total Unique Page URL</h5>
			<p class="mb-2 text-xl font-bold tracking-tight text-gray-900 dark:text-white">
				{ fmt.Sprintf("%d", summary.TotalPageURL) }
			</p>
		</div>
	</section>
	<section class="grid grid-cols-1 sm:grid-cols-1 lg:grid-cols-4 gap-4 mb-4">
		<div class="block max-w-sm pt-6 pb-4 px-4 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
			<div class="flex items-center gap-2">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-3 w-3">
					<path fill-rule="evenodd" d="M19.902 4.098a3.75 3.75 0 0 0-5.304 0l-4.5 4.5a3.75 3.75 0 0 0 1.035 6.037.75.75 0 0 1-.646 1.353 5.25 5.25 0 0 1-1.449-8.45l4.5-4.5a5.25 5.25 0 1 1 7.424 7.424l-1.757 1.757a.75.75 0 1 1-1.06-1.06l1.757-1.757a3.75 3.75 0 0 0 0-5.304Zm-7.389 4.267a.75.75 0 0 1 1-.353 5.25 5.25 0 0 1 1.449 8.45l-4.5 4.5a5.25 5.25 0 1 1-7.424-7.424l1.757-1.757a.75.75 0 1 1 1.06 1.06l-1.757 1.757a3.75 3.75 0 1 0 5.304 5.304l4.5-4.5a3.75 3.75 0 0 0-1.035-6.037.75.75 0 0 1-.354-1Z" clip-rule="evenodd"></path>
				</svg>
				<h5 class="font-normal text-sm text-gray-700 dark:text-gray-400">Most Visited URLs</h5>
			</div>
			<ol class="max-w-md space-y-1 text-sm mt-2 text-gray-900 list-decimal list-inside dark:text-white">
				for _, v := range summary.MostVisitedURLs {
					<li class="flex items-center justify-between">
						<p class="mb-2 tracking-tight text-gray-600 dark:text-white">
							{ v.Name }
						</p>
						<p class="mb-2 font-bold tracking-tight text-gray-900 dark:text-white">
							{ fmt.Sprintf("%d", v.Total) }
						</p>
					</li>
				}
			</ol>
		</div>
		<div class="block max-w-sm pt-6 pb-4 px-4 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
			<div class="flex items-center gap-2">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-3 w-3">
					<path d="M15.75 8.25a.75.75 0 0 1 .75.75c0 1.12-.492 2.126-1.27 2.812a.75.75 0 1 1-.992-1.124A2.243 2.243 0 0 0 15 9a.75.75 0 0 1 .75-.75Z"></path>
					<path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25ZM4.575 15.6a8.25 8.25 0 0 0 9.348 4.425 1.966 1.966 0 0 0-1.84-1.275.983.983 0 0 1-.97-.822l-.073-.437c-.094-.565.25-1.11.8-1.267l.99-.282c.427-.123.783-.418.982-.816l.036-.073a1.453 1.453 0 0 1 2.328-.377L16.5 15h.628a2.25 2.25 0 0 1 1.983 1.186 8.25 8.25 0 0 0-6.345-12.4c.044.262.18.503.389.676l1.068.89c.442.369.535 1.01.216 1.49l-.51.766a2.25 2.25 0 0 1-1.161.886l-.143.048a1.107 1.107 0 0 0-.57 1.664c.369.555.169 1.307-.427 1.605L9 13.125l.423 1.059a.956.956 0 0 1-1.652.928l-.679-.906a1.125 1.125 0 0 0-1.906.172L4.575 15.6Z" clip-rule="evenodd"></path>
				</svg>
				<h5 class="font-normal text-sm text-gray-700 dark:text-gray-400">Most Visited Countries</h5>
			</div>
			<ol class="max-w-md space-y-1 text-sm mt-2 text-gray-900 list-decimal list-inside dark:text-white">
				for _, v := range summary.MostCountryVisited {
					<li class="flex items-center justify-between">
						<p class="mb-2 tracking-tight text-gray-600 dark:text-white">
							{ v.Name }
						</p>
						<p class="mb-2 font-bold tracking-tight text-gray-900 dark:text-white">
							{ fmt.Sprintf("%d", v.Total) }
						</p>
					</li>
				}
			</ol>
		</div>
		<div class="block max-w-sm pt-6 pb-4 px-4 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
			<div class="flex items-center gap-2">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-3 w-3">
					<path fill-rule="evenodd" d="m11.54 22.351.07.04.028.016a.76.76 0 0 0 .723 0l.028-.015.071-.041a16.975 16.975 0 0 0 1.144-.742 19.58 19.58 0 0 0 2.683-2.282c1.944-1.99 3.963-4.98 3.963-8.827a8.25 8.25 0 0 0-16.5 0c0 3.846 2.02 6.837 3.963 8.827a19.58 19.58 0 0 0 2.682 2.282 16.975 16.975 0 0 0 1.145.742ZM12 13.5a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z" clip-rule="evenodd"></path>
				</svg>
				<h5 class="font-normal text-sm text-gray-700 dark:text-gray-400">Most Visited Cities</h5>
			</div>
			<ol class="max-w-md space-y-1 text-sm mt-2 text-gray-900 list-decimal list-inside dark:text-white">
				for _, v := range summary.MostCitiesVisited {
					<li class="flex items-center justify-between">
						<p class="mb-2 tracking-tight text-gray-600 dark:text-white">
							{ v.Name }
						</p>
						<p class="mb-2 font-bold tracking-tight text-gray-900 dark:text-white">
							{ fmt.Sprintf("%d", v.Total) }
						</p>
					</li>
				}
			</ol>
		</div>
		<div class="block max-w-sm pt-6 pb-4 px-4 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
			<div class="flex items-center gap-2">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-3 h-3">
					<path fill-rule="evenodd" d="M11.078 2.25c-.917 0-1.699.663-1.85 1.567L9.05 4.889c-.02.12-.115.26-.297.348a7.493 7.493 0 0 0-.986.57c-.166.115-.334.126-.45.083L6.3 5.508a1.875 1.875 0 0 0-2.282.819l-.922 1.597a1.875 1.875 0 0 0 .432 2.385l.84.692c.095.078.17.229.154.43a7.598 7.598 0 0 0 0 1.139c.015.2-.059.352-.153.43l-.841.692a1.875 1.875 0 0 0-.432 2.385l.922 1.597a1.875 1.875 0 0 0 2.282.818l1.019-.382c.115-.043.283-.031.45.082.312.214.641.405.985.57.182.088.277.228.297.35l.178 1.071c.151.904.933 1.567 1.85 1.567h1.844c.916 0 1.699-.663 1.85-1.567l.178-1.072c.02-.12.114-.26.297-.349.344-.165.673-.356.985-.57.167-.114.335-.125.45-.082l1.02.382a1.875 1.875 0 0 0 2.28-.819l.923-1.597a1.875 1.875 0 0 0-.432-2.385l-.84-.692c-.095-.078-.17-.229-.154-.43a7.614 7.614 0 0 0 0-1.139c-.016-.2.059-.352.153-.43l.84-.692c.708-.582.891-1.59.433-2.385l-.922-1.597a1.875 1.875 0 0 0-2.282-.818l-1.02.382c-.114.043-.282.031-.449-.083a7.49 7.49 0 0 0-.985-.57c-.183-.087-.277-.227-.297-.348l-.179-1.072a1.875 1.875 0 0 0-1.85-1.567h-1.843ZM12 15.75a3.75 3.75 0 1 0 0-7.5 3.75 3.75 0 0 0 0 7.5Z" clip-rule="evenodd"></path>
				</svg>
				<h5 class="font-normal text-sm text-gray-700 dark:text-gray-400">Most Firing Elements</h5>
			</div>
			<ol class="max-w-md space-y-1 text-sm mt-2 text-gray-900 list-decimal list-inside dark:text-white">
				for _, v := range summary.MostElementsFired {
					<li class="flex items-center justify-between">
						<p class="mb-2 tracking-tight text-gray-600 dark:text-white">
							{ v.Name }
						</p>
						<p class="mb-2 font-bold tracking-tight text-gray-900 dark:text-white">
							{ fmt.Sprintf("%d", v.Total) }
						</p>
					</li>
				}
			</ol>
		</div>
		<div class="border-l-4 border-l-purple-600 border border-gray-200 block max-w-sm pt-6 pb-4 px-4 bg-white rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
			<div class="flex items-center gap-2">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-3 w-3">
					<path d="M4.5 6.375a4.125 4.125 0 1 1 8.25 0 4.125 4.125 0 0 1-8.25 0ZM14.25 8.625a3.375 3.375 0 1 1 6.75 0 3.375 3.375 0 0 1-6.75 0ZM1.5 19.125a7.125 7.125 0 0 1 14.25 0v.003l-.001.119a.75.75 0 0 1-.363.63 13.067 13.067 0 0 1-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 0 1-.364-.63l-.001-.122ZM17.25 19.128l-.001.144a2.25 2.25 0 0 1-.233.96 10.088 10.088 0 0 0 5.06-1.01.75.75 0 0 0 .42-.643 4.875 4.875 0 0 0-6.957-4.611 8.586 8.586 0 0 1 1.71 5.157v.003Z"></path>
				</svg>
				<h5 class="font-normal text-sm text-gray-700 dark:text-gray-400">Last Visited Users</h5>
			</div>
			<ol class="max-w-md space-y-1 text-sm mt-2 text-gray-900 list-decimal list-inside dark:text-white">
				for _, v := range summary.LastVisitedUsers {
					<li class="flex items-center justify-between">
						<p class="mb-2 tracking-tight text-gray-800 dark:text-white">
							{ v.IP.String() }
						</p>
						<p class="mb-2 text-xs tracking-tight text-gray-400 dark:text-white">
							{ v.Timestamp.Format("02/01/2006 15:04:05") }
						</p>
					</li>
				}
			</ol>
		</div>
		<div class="block max-w-sm pt-6 pb-4 px-4 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
			<div class="flex items-center gap-2">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-3 w-3">
					<path fill-rule="evenodd" d="M2.25 6a3 3 0 0 1 3-3h13.5a3 3 0 0 1 3 3v12a3 3 0 0 1-3 3H5.25a3 3 0 0 1-3-3V6Zm18 3H3.75v9a1.5 1.5 0 0 0 1.5 1.5h13.5a1.5 1.5 0 0 0 1.5-1.5V9Zm-15-3.75A.75.75 0 0 0 4.5 6v.008c0 .414.336.75.75.75h.008a.75.75 0 0 0 .75-.75V6a.75.75 0 0 0-.75-.75H5.25Zm1.5.75a.75.75 0 0 1 .75-.75h.008a.75.75 0 0 1 .75.75v.008a.75.75 0 0 1-.75.75H7.5a.75.75 0 0 1-.75-.75V6Zm3-.75A.75.75 0 0 0 9 6v.008c0 .414.336.75.75.75h.008a.75.75 0 0 0 .75-.75V6a.75.75 0 0 0-.75-.75H9.75Z" clip-rule="evenodd"></path>
				</svg>
				<h5 class="font-normal text-sm text-gray-700 dark:text-gray-400">Most Used Browser</h5>
			</div>
			<ol class="max-w-md space-y-1 text-sm mt-2 text-gray-900 list-decimal list-inside dark:text-white">
				for _, v := range summary.MostUsedBrowsers {
					<li class="flex items-center justify-between">
						<p class="mb-2 tracking-tight text-gray-600 dark:text-white">
							{ v.Name }
						</p>
						<p class="mb-2 font-bold tracking-tight text-gray-900 dark:text-white">
							{ fmt.Sprintf("%d", v.Total) }
						</p>
					</li>
				}
			</ol>
		</div>
		<div class="block max-w-sm pt-6 pb-4 px-4 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
			<div class="flex items-center gap-2">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-3 w-3">
					<path fill-rule="evenodd" d="M5.625 1.5c-1.036 0-1.875.84-1.875 1.875v17.25c0 1.035.84 1.875 1.875 1.875h12.75c1.035 0 1.875-.84 1.875-1.875V12.75A3.75 3.75 0 0 0 16.5 9h-1.875a1.875 1.875 0 0 1-1.875-1.875V5.25A3.75 3.75 0 0 0 9 1.5H5.625ZM7.5 15a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 7.5 15Zm.75 2.25a.75.75 0 0 0 0 1.5H12a.75.75 0 0 0 0-1.5H8.25Z" clip-rule="evenodd"></path>
					<path d="M12.971 1.816A5.23 5.23 0 0 1 14.25 5.25v1.875c0 .207.168.375.375.375H16.5a5.23 5.23 0 0 1 3.434 1.279 9.768 9.768 0 0 0-6.963-6.963Z"></path>
				</svg>
				<h5 class="font-normal text-sm text-gray-700 dark:text-gray-400">Most Fired Event Type</h5>
			</div>
			<ol class="max-w-md space-y-1 text-sm mt-2 text-gray-900 list-decimal list-inside dark:text-white">
				for _, v := range summary.MostFiredEventType {
					<li class="flex items-center justify-between">
						<p class="mb-2 tracking-tight text-gray-600 dark:text-white">
							{ v.Name }
						</p>
						<p class="mb-2 font-bold tracking-tight text-gray-900 dark:text-white">
							{ fmt.Sprintf("%d", v.Total) }
						</p>
					</li>
				}
			</ol>
		</div>
		<div class="block max-w-sm pt-6 pb-4 px-4 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
			<div class="flex items-center gap-2">
				<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="h-3 w-3">
					<path fill-rule="evenodd" d="M5.25 2.25a3 3 0 0 0-3 3v4.318a3 3 0 0 0 .879 2.121l9.58 9.581c.92.92 2.39 1.186 3.548.428a18.849 18.849 0 0 0 5.441-5.44c.758-1.16.492-2.629-.428-3.548l-9.58-9.581a3 3 0 0 0-2.122-.879H5.25ZM6.375 7.5a1.125 1.125 0 1 0 0-2.25 1.125 1.125 0 0 0 0 2.25Z" clip-rule="evenodd"></path>
				</svg>
				<h5 class="font-normal text-sm text-gray-700 dark:text-gray-400">Most Fired Event Label</h5>
			</div>
			<ol class="max-w-md space-y-1 text-sm mt-2 text-gray-900 list-decimal list-inside dark:text-white">
				for _, v := range summary.MostFiredEventLabel {
					<li class="flex items-center justify-between">
						<p class="mb-2 tracking-tight text-gray-600 dark:text-white">
							{ v.Name }
						</p>
						<p class="mb-2 font-bold tracking-tight text-gray-900 dark:text-white">
							{ fmt.Sprintf("%d", v.Total) }
						</p>
					</li>
				}
			</ol>
		</div>
	</section>
}
