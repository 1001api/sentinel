services:
  server:
    build: ./
    container_name: sentinel-server
    ports: 
      - "8080:8080"
    environment:
      - PORT=8080
      - POSTGRES_HOST=sentinel-pg
      - POSTGRES_PASSWORD=n6c4QgqKUkz7hf3WuFPS25wYCHt8TvRx
      - POSTGRES_USER=postgres
      - POSTGRES_DB=sentinel-alpha
      - POSTGRES_PORT=5432
      - REDIS_HOST=sentinel-redis
      - REDIS_PORT=6379
      - G_CLIENT=407555103150-n89fabccd4m6d0lr9jqom33uo0iefn5v.apps.googleusercontent.com
      - G_SECRET=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
      - G_REDIRECT=http://localhost:8080/auth/google/callback
      - COOKIE_SALT=zbPc2UYtqL6AHgF4XBpVsTCG5y3RQxNm
    depends_on:
      sentinel-pg:
        condition: service_healthy
      sentinel-redis:
        condition: service_healthy

  sentinel-pg:
    image: postgres:16
    restart: always
    user: postgres
    environment:
      POSTGRES_DB: sentinel-alpha
      POSTGRES_PASSWORD: zbPc2UYtqL6AHgF4XBpVsTCG5y3RQxNm
    volumes:
      - sentinel-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  sentinel-redis:
    image: redis:7.4.1
    restart: always
    environment:
      - REDIS_PORT=6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  sentinel-data:
